---
# Source: aio-kafka/templates/cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "my-kafka-config"
  labels:
    helm.sh/chart: aio-kafka-0.1.0
    app.kubernetes.io/name: aio-kafka
    app.kubernetes.io/instance: my-kafka
    app.kubernetes.io/version: "3.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  server.properties: |-
    controller.quorum.voters=1@localhost:9093
    process.roles=broker,controller
    node.id=1
    listeners=PLAINTEXT://:9092,CONTROLLER://:9093
    controller.listener.names=CONTROLLER
    inter.broker.listener.name=PLAINTEXT
    num.network.threads=3
    num.io.threads=8
    socket.send.buffer.bytes=102400
---
# Source: aio-kafka/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-kafka-data
  labels:
    helm.sh/chart: aio-kafka-0.1.0
    app.kubernetes.io/name: aio-kafka
    app.kubernetes.io/instance: my-kafka
    app.kubernetes.io/version: "3.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: "rawfile-btrfs"
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "2Gi"
---
# Source: aio-kafka/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kafka
  labels:
    helm.sh/chart: aio-kafka-0.1.0
    app.kubernetes.io/name: aio-kafka
    app.kubernetes.io/instance: my-kafka
    app.kubernetes.io/version: "3.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - name: main
    port: 9092
    protocol: TCP
    targetPort: 9092
  - name: tcp-internal
    port: 9093
    protocol: TCP
    targetPort: 9093
  selector:
    app.kubernetes.io/name: aio-kafka
    app.kubernetes.io/instance: my-kafka
---
# Source: aio-kafka/templates/sts.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-kafka
  labels:
    helm.sh/chart: aio-kafka-0.1.0
    app.kubernetes.io/name: aio-kafka
    app.kubernetes.io/instance: my-kafka
    app.kubernetes.io/version: "3.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: my-kafka-kafka
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: aio-kafka
      app.kubernetes.io/instance: my-kafka
  template:
    metadata:
      annotations:
        checksum/config: fffb33bf531894fe207b30dacd543f2868e232967430fbaad973ad9758b9fc57
      labels:
        app.kubernetes.io/name: aio-kafka
        app.kubernetes.io/instance: my-kafka
    spec:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - name: kafka
          image: "registry.hamdocker.ir/public/kafka:7.3.0"
          imagePullPolicy: IfNotPresent
          command:
          - bash
          - -c 
          # args: [ "kafka-storage random-uuid > /tmp/clusterID && sed -i '/KAFKA_ZOOKEEPER_CONNECT/d' /etc/confluent/docker/configure && sed -i 's/cub zk-ready/echo ignore zk-ready/' /etc/confluent/docker/ensure && echo \"kafka-storage format --ignore-formatted -t $(cat /tmp/clusterID) -c /etc/kafka/kafka.properties\" >> /etc/confluent/docker/ensure && /etc/confluent/docker/run" ]
          args:
            - kafka-storage random-uuid > /tmp/clusterID;
              sed -i '/KAFKA_ZOOKEEPER_CONNECT/d' /etc/confluent/docker/configure;
              sed -i 's/cub zk-ready/echo ignore zk-ready/' /etc/confluent/docker/ensure;
              echo "kafka-storage format --ignore-formatted -t $(cat /tmp/clusterID) -c /etc/kafka/kafka.properties" >> /etc/confluent/docker/ensure;
              /etc/confluent/docker/run;
          ports:
          - name: kafka-client
            containerPort: 9092
          - name: kafka-internal
            containerPort: 9093
          env:
          - name: KAFKA_ENABLE_KRAFT
            value: "yes"
          - name: KAFKA_PROCESS_ROLES
            value: "broker,controller"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "null"
          - name: KAFKA_CONTROLLER_LISTENER_NAMES
            value: "CONTROLLER"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_LISTENERS
            value: "PLAINTEXT://:9092,CONTROLLER://:9093"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "PLAINTEXT://my-kafka:9092"
          - name: KAFKA_NODE_ID
            value: "1"
          - name: KAFKA_CONTROLLER_QUORUM_VOTERS
            value: "1@localhost:9093"
          - name: KAFKA_ALLOW_PLAINTEXT_LISTENER
            value: "yes"
          - name: KAFKA_HEAP_OPTS
            value: "-Xmx500m"
          lifecycle:
            preStop:
              exec:
                command: [ "/bin/sh","-c", "sleep 5" ]
          resources:
            limits:
              cpu: 500m
              ephemeral-storage: 512M
              memory: 1000M
            requests:
              cpu: 500m
              ephemeral-storage: 512M
              memory: 1000M
          volumeMounts:
            - name: data
              mountPath: /var/lib/kafka/data
            - name: config
              mountPath: /etc/kafka/server.properties
              subPath: server.properties
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: "my-kafka-data"
      - name: config
        configMap:
          name: "my-kafka-config"
      # nodeSelector:
